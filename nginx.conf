worker_processes auto;

events {
	worker_connections 128;
}

http {
	include             mime.types;

	sendfile            off;
	keepalive_requests  100;
	keepalive_timeout   65;
	gzip_static         on;			#если уж и отгружаем свои файлы, то делаем это нормально

	upstream tls-key {
		server      127.0.0.1:28016;
		keepalive   1;			#не открывать много потоков на гейт -- зависнет
	}

	proxy_temp_path b:/t-cache/ 1 2;	#задаем самые жестокие в мире параметры кэширования
	proxy_cache_path b:/vpn-cache/ levels=1:2 keys_zone=token:100m inactive=10d;
	proxy_ignore_headers "Expires" "X-Accel-Expires" "Cache-Control" "Vary";
	proxy_cache_use_stale error timeout invalid_header http_502;
	proxy_connect_timeout 5s;
	proxy_cache_revalidate off;

	server {
		listen 80;
		proxy_cache_key "$request_method|$host|$request_uri";
		client_max_body_size 0;
		set $redefine_user_agent "Mozilla/5.0 (Windows NT 6.1; rv:45.0) Gecko/20100101 Firefox/45.0";
		set $gate_address        "localhost:28016";		#по этому адресу слушает гейт
		set $service_url         "http://10.10.10.21/";		#сюда заходит клиент

		access_log off;			#не мусорим в лог

		location / {
			proxy_pass     http://tls-key;
			proxy_redirect http://$gate_address/ $service_url;
			proxy_http_version 1.1;

			sub_filter_types *;		#фильтруем все типы ответов
			sub_filter_once off;		#фильтр может сработать многократно
			
			#делаем из абсолютного пути относительный
			sub_filter 'http://$gate_address' '';   #множественные фильтры в одном location поддерживаются в nginx >= 1.9.4

			#отключаем предупреждение о мобильном браузере
			sub_filter 'mobileBrowserShowForm' 'noop';

			#убираем идиотские персональные предложения
			sub_filter 'mainpage-widget PersonalOffersPanel' 'mainpage-widget PersonalOffersPanel\',style:\'display:none;';

			#убираем пугалку про мошенников
			sub_filter 'div class="note"' 'div class="note" style="display:none;"';

			#блокируем загрузку скриптов третьих лиц
			sub_filter 'src="_js/relativepath:resources' 'rpl="_js/relativepath:resources';
			sub_filter 'mc.yandex.ru/metrika/watch.js' '';
			sub_filter 'mc.yandex.ru/watch' '';
			sub_filter 'www.google-analytics.com/analytics.js' '';

			#подключаем шрифты правильно
			sub_filter '<!-- ZK 7.0.5 EE 2015032410 -->' '<link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Open+Sans" />';

			proxy_set_header Host $gate_address;			#сообщаем гейту, что зашли локально
			proxy_set_header Accept-Encoding '';			#требуем несжатый ответ
			proxy_set_header Referer '';				#стараемся о себе поменьше сообщать
			proxy_set_header Origin '';				#стараемся о себе поменьше сообщать
			proxy_set_header User-Agent $redefine_user_agent;	#прикидываемся виндой
			proxy_set_header Connection '';				#сбрасываем keepalive -- иначе зависнет гейт
			proxy_set_header X-Compress '';				#убираем странные заголовки Хрома
			proxy_set_header Upgrade-Insecure-Requests '';		#убираем странные заголовки Хрома
		}#сюда попадают все запросы, не подходящие по другим критериям
		 #это самый нагруженный обработчик, старайтесь, чтобы сюда не попадали заведомо нетекстовые ответы

		location ^~ /ic/wm2/themes/sbrf/css/theme.css { #нужно вручную вырезать объявление шрифтов из темы, ибо оно сделано криво,
			root html;                              #и отгружать полученный файл. Если устраивает, как бракоделы подключили
		}                                               #шрифты, то убрать этот блок вместе с заменой про шрифты из верхнего блока и забыть

		location ~* .+(infocrypt.js|token.min.js|lkkapp-token.js)$ {
			proxy_cache_valid any 15d;	#здесь и далее везде включаем кэширование
			proxy_cache    token;
			proxy_pass     http://tls-key;
			proxy_redirect http://$gate_address/ $service_url;
			proxy_http_version 1.1;

			sub_filter_types *;
			sub_filter_once off;
			sub_filter 'http://$gate_address' '';				#делаем из абсолютного пути относительный
			sub_filter 'http://localhost:"+getTokenPortInternal()+"' '';	#иначе запрос пойдет на localhost клиента

			proxy_set_header Host $gate_address;
			proxy_set_header Accept-Encoding '';			#требуем несжатый ответ
			proxy_set_header Referer '';				#заголовки приходится повторять во всех location,
			proxy_set_header Origin '';				#NGINX не принимает заголовки из вышестоящих контекстов
			proxy_set_header User-Agent $redefine_user_agent;
			proxy_set_header Connection '';
			proxy_set_header X-Compress '';
			proxy_set_header Upgrade-Insecure-Requests '';
		}#отдельно обрабатываем скрипты, пытающиеся найти гейт на локалхосте

		location ~* .+(rsa.js)$ {
			proxy_cache_valid any 15d;
			proxy_cache    token;
			proxy_pass     http://tls-key;
			proxy_redirect http://$gate_address/ $service_url;
			proxy_http_version 1.1;

			sub_filter_types *;
			sub_filter_once off;
			sub_filter 'add_deviceprint();' '"";'; #пресекаем сбор метаданных о компьютере клиента

			proxy_set_header Host $gate_address;
			proxy_set_header Accept-Encoding '';	#требуем несжатый ответ
			proxy_set_header Referer '';
			proxy_set_header Origin '';
			proxy_set_header User-Agent $redefine_user_agent;
			proxy_set_header Connection '';
			proxy_set_header X-Compress '';
			proxy_set_header Upgrade-Insecure-Requests '';
		}#Назначение этого скрипта непонятно, но он в том числе подготавливает для отправки отпечаток компьютера клиента
		 #в открытом для разбора виде. Никакой персональной информации там нет, но нам этого всё равно не надо, спасибо.

		location ^~ /ic/wm2/js/biginteger.js { #отгружаем актуальную версию либы
			root html;
		}

		location ^~ /ic/wm2/js/jquery.maskedinput.min.js { #отгружаем актуальную версию либы
			root html;
		}

		location ^~ /ic/resources/js/biginteger.js { #отгружаем актуальную версию либы
			root html;
		}

		location ^~ /ic/resources/js/jquery.min.js { #отгружаем актуальную версию либы
			root html;
		}

		location ^~ /ic/resources/js/jquery.placeholder.js { #отгружаем актуальную версию либы
			root html;
		}

		location ~* .+\.(jpg|jpeg|gif|js|css|map|png|dsp|wpd|wcs|eot|woff|woff2|svg|ttf|zip|rar|txt|pdf|dbf|rtf|doc|docx|xls|xlsx)$ {
			proxy_cache_valid any 15d;
			proxy_cache    token;
			proxy_pass     http://tls-key;
			proxy_redirect http://$gate_address/ $service_url;
			proxy_http_version 1.1;

			proxy_set_header Host $gate_address;
			proxy_set_header Referer '';
			proxy_set_header Origin '';
			proxy_set_header User-Agent $redefine_user_agent;
			proxy_set_header Connection '';
			proxy_set_header X-Compress '';
			proxy_set_header Upgrade-Insecure-Requests '';
		}#кэшируем всё это добро

		location ~* .+(common|sbbol|shared|admin)$ {
			proxy_cache_valid any 15d;
			proxy_cache    token;
			proxy_pass     http://tls-key;
			proxy_redirect http://$gate_address/ $service_url;
			proxy_http_version 1.1;

			proxy_set_header Host $gate_address;
			proxy_set_header Referer '';
			proxy_set_header Origin '';
			proxy_set_header User-Agent $redefine_user_agent;
			proxy_set_header Connection '';
			proxy_set_header X-Compress  '';
			proxy_set_header Upgrade-Insecure-Requests '';
		}#отдельный приз за идиотизм -- js и css без расширения. Кэшируем.

		location ~* /favicon.ico {#делаем красиво
			root b:/html/bank;
		}

		location ^~ /link/ {#по этому запросу отдаем сырую начальную ссылку для администратора
			expires -1;
			add_header Last-Modified $msec;
			alias d:/;
			index sslgate.url;
		}

		location ^~ /bank/ {#это нормальный рабочий запрос
			expires -1;
			add_header Last-Modified $msec;
			root b:/html;
			index index.html;
		}

		location ^~ /reload/ {#по этому запросу выполняем действия в табе (задача remote_restarter)
			expires -1;
			add_header Last-Modified $msec;
			root html;
			index reload.html;
			access_log logs/reload.log;
		}

		location ^~ /ccache/ {#по этому запросу выполняем действия в табе (задача clear_cache)
			expires -1;
			add_header Last-Modified $msec;
			root html;
			index ccache.html;
			access_log logs/ccache.log;
		}

		error_page 500 502 503 504 /50x.html;

		location = /50x.html {
			root html;
		}
	}
}
